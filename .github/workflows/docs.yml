name: Docs2Pages

on: [pull_request]

jobs:
  run:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.9]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Bootstrap poetry
        shell: bash
        run: |
          python -m ensurepip
          python -m pip install --upgrade pip
          python -m pip install poetry

      - name: Configure poetry
        shell: bash
        run: |
          python -m poetry config virtualenvs.in-project true

      # - name: Set up cache
      #   uses: actions/cache@v2
      #   id: cache
      #   with:
      #     path: .venv
      #     key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

      # - name: Ensure cache is healthy
      #   if: steps.cache.outputs.cache-hit == 'true'
      #   shell: bash
      #   run: timeout 10s python -m poetry run pip --version || rm -rf .venv

      - name: Install dependencies
        shell: bash
        run: |
          python -m poetry install --with docs

      - name: Build documentation
        run: |
          mkdir gh-pages
          touch gh-pages/.nojekyll
          cd docs/
          poetry run sphinx-build -b html source _build
          cp -r _build/* ../gh-pages/

      - name: Deploy documentation
        # if: ${{ github.event_name == 'push' }}
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: gh-pages
